tosca_definitions_version: cloudify_dsl_1_3

description: >
  This Blueprint installs the nodecellar application on an Azure Cloud environment.

imports:
  - http://www.getcloudify.org/spec/cloudify/4.2/types.yaml
  - http://www.getcloudify.org/spec/azure-plugin/1.5.1/plugin.yaml
  - http://www.getcloudify.org/spec/utilities-plugin/1.4.5/plugin.yaml

inputs:

  resource_prefix:
    default: nc

  resource_suffix:
    default: '1'

  retry_after:
    type: integer
    default: 60

  location:
    default: { get_secret: azure_location }

  manager_network:
    default: external

  network_deployment_name:
    default: azure-example-network

dsl_definitions:

  azure_config: &azure_config
    subscription_id: { get_secret: azure_subscription_id }
    tenant_id: { get_secret: azure_tenant_id }
    client_id: { get_secret: azure_client_id }
    client_secret: { get_secret: azure_client_secret }

node_templates:

  network_security_group:
    type: cloudify.azure.nodes.network.NetworkSecurityGroup
    properties:
      name: {concat:[{get_input: resource_prefix},nsg,{get_input: resource_suffix}]}
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        securityRules:
        - name: njssg_ssh
          properties:
            description: SSH access
            protocol: Tcp
            sourcePortRange: '*'
            destinationPortRange: 22
            sourceAddressPrefix: '*'
            destinationAddressPrefix: '*'
            priority: 102
            access: Allow
            direction: Inbound
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.nic_connected_to_network_security_group
      target: network_security_group
    - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
      target: nic_ip_cfg

  nic_ip_cfg:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
    - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
      target: subnet
    - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
      target: nodecellar_ip

  nodecellar_ip:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      location: { get_input: location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  availability_set:
    type: cloudify.azure.nodes.compute.AvailabilitySet
    properties:
      name: {concat:[{get_input: resource_prefix},availset,{get_input: resource_suffix}]}
      location: { get_secret: azure_location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  storage_account:
    type: cloudify.azure.nodes.storage.StorageAccount
    properties:
      location: { get_secret: azure_location }
      azure_config: *azure_config
      retry_after: { get_input: retry_after }
      resource_config:
        accountType: Standard_LRS
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      resource_group_name: { get_attribute: [ azure, deployment, outputs, resource_group ] }
      name: { get_attribute: [ azure, deployment, outputs, public_subnet ] }
      azure_config: *azure_config
      use_external_resource: true
      location: { get_attribute: [ azure, deployment, outputs, location ] }
    relationships:
    - type: cloudify.azure.relationships.contained_in_virtual_network
      target: virtual_network

  virtual_network:
    type: cloudify.azure.nodes.network.VirtualNetwork
    properties:
      resource_group_name: { get_attribute: [ azure, deployment, outputs, resource_group ] }
      name: { get_attribute: [ azure, deployment, outputs, virtual_network ] }
      azure_config: *azure_config
      use_external_resource: true
      location: { get_attribute: [ azure, deployment, outputs, location ] }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group

  resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      name: { get_attribute: [ azure, deployment, outputs, resource_group ] }
      use_external_resource: true
      location: { get_attribute: [ azure, deployment, outputs, location ] }
      azure_config: *azure_config
    relationships:
    - type: cloudify.relationships.contained_in
      target: azure

  azure:
    type: cloudify.nodes.DeploymentProxy
    properties:
      resource_config:
        blueprint:
          id: { get_input: network_deployment_name }
          blueprint_archive: https://github.com/cloudify-examples/azure-example-network/archive/master.zip
          main_file_name: simple-blueprint.yaml
          external_resource: external
        deployment:
          id: { get_input: network_deployment_name }
          outputs:
            resource_group: resource_group
            virtual_network: virtual_network
            public_subnet: public_subnet
            location: location
          external_resource: external
        reexecute: false
